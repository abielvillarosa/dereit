{"version":3,"sources":["app/images/dereit-logo.PNG","app/images/banner.png","serviceWorker.js","app/layout/Site.js","app/layout/Content.js","app/layout/Footer.js","blockchain/index.js","app/NavBar.js","app/Home.js","app/layout/Router.js","app/Layout.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Site","styled","div","Content","Footer","className","align","BlockchainClient","ethereum","enable","this","provider","ethers","providers","Web3Provider","web3","currentProvider","signer","getSigner","dashboardContract","Contract","PublicEntryABI","getAddress","then","address","console","log","investorAddress","registerInvestor","txHash","hash","deposit","trigger","tokenAmount","approveWithdraw","withdraw","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavBar","classes","AppBar","position","Toolbar","href","src","logo","alt","blockchain","createMuiTheme","marginLeft","buttonMargin","Home","props","state","handleClick","bind","handleRegister","handleDeposit","handleClaim","handleWithdraw","e","preventDefault","setState","res","imageSrc","banner","Button","style","margin","variant","color","onClick","Typography","noWrap","Component","withStyles","Router","exact","path","component","Layout","children","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62ddd6a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dereit-logo.ea60e965.PNG\";","module.exports = __webpack_public_path__ + \"static/media/banner.0c52cd9d.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from 'styled-components'\r\n\r\nconst Site = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n\tmin-height: 100vh;\r\n`\r\nexport default Site","import styled from 'styled-components'\r\n\r\nconst Content = styled.div`\r\n\tflex: 1;\r\n`\r\nexport default Content","import React from 'react'\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div align=\"center\" className=\"container\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>\r\n          Developed for <strong>GBC Work Integrated Learning</strong> course by Abiel Villarosa\r\n          <br />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer","import { ethers } from 'ethers'\r\nimport PublicEntryABI from './abi/PublicEntry.json'\r\n\r\n\r\nexport default class BlockchainClient {\r\n\r\n    constructor(){\r\n        window.ethereum.enable()\r\n        this.provider = new ethers.providers.Web3Provider(window.web3.currentProvider)\r\n        this.signer = this.provider.getSigner()\r\n        this.dashboardContract = new ethers.Contract(\"0x7EC9bdA4c5badc9D3A2728E4952687007F4e6B91\", PublicEntryABI, this.signer)\r\n        // this.account = this.provider.getSigner()\r\n        this.signer.getAddress().then((address) => {\r\n            console.log(\"Wallet Address: \" + address);\r\n            this.address = address;\r\n        });\r\n    }\r\n\r\n    async getAddress() {\r\n            return this.address;\r\n    }\r\n\r\n    async registerInvestor(investorAddress) {\r\n        let txHash = await this.dashboardContract.registerInvestor(investorAddress);\r\n        return txHash.hash;\r\n    }\r\n\r\n    async deposit() {\r\n        let txHash = await this.dashboardContract.deposit();\r\n        return txHash.hash;\r\n    }\r\n\r\n    async trigger() {\r\n        let txHash = await this.dashboardContract.trigger();\r\n        return txHash.hash;\r\n    }\r\n\r\n    async approveWithdraw(tokenAmount) {\r\n        let txHash = await this.dashboardContract.approveWithdraw(tokenAmount);\r\n        return txHash.hash;\r\n    }\r\n    async withdraw() {\r\n        let txHash = await this.dashboardContract.withdraw();\r\n        return txHash.hash;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { AppBar, Toolbar, makeStyles } from '@material-ui/core';\r\nimport logo from './images/dereit-logo.PNG';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n          <a href=\"/dereit\"><img src= { logo } alt=\"logo\" className={classes.logo}></img></a>         \r\n\r\n    </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport BlockchainClient from '../blockchain';\r\nimport NavBar from './NavBar';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { Typography, Button, makeStyles, createMuiTheme } from '@material-ui/core';\r\n// import Image from 'material-ui-image';\r\nimport banner from './images/banner.png';\r\nimport LazyHero from 'react-lazy-hero';\r\n\r\n\r\nconst blockchain = new BlockchainClient();\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.spacing(4);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  buttonMargin: {\r\n    spacing: 8,\r\n  }\r\n}));\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {txHash : '', investorAddress : ''};\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.handleDeposit = this.handleDeposit.bind(this);\r\n        this.handleClaim = this.handleClaim.bind(this);\r\n        this.handleWithdraw = this.handleWithdraw.bind(this);\r\n      }\r\n\r\n    handleRegister(e){\r\n        e.preventDefault()\r\n\r\n        // let investorAddress = \"0x10A21879783A76c20A70f4838dc18E01d0a1E8e7\"\r\n        let investorAddress = blockchain.getAddress()\r\n        this.setState({investorAddress : investorAddress})\r\n\r\n        blockchain.registerInvestor(investorAddress).then(res => {\r\n            console.log(investorAddress);\r\n            console.log(res);\r\n            this.setState({txHash :res });\r\n          })\r\n      \r\n    };\r\n\r\n    handleDeposit(e){\r\n        e.preventDefault()\r\n\r\n        blockchain.deposit().then(res => {\r\n            console.log(res);\r\n            this.setState({txHash :res });\r\n        })\r\n    }\r\n\r\n    handleClaim(e){\r\n        e.preventDefault()\r\n\r\n        blockchain.trigger().then(res => {\r\n            console.log(res);\r\n            this.setState({txHash :res });\r\n        })\r\n    }\r\n\r\n    handleWithdraw(e){\r\n        e.preventDefault()\r\n\r\n        blockchain.withdraw().then(res => {\r\n            console.log(res);\r\n            this.setState({txHash :res });\r\n        })\r\n    }\r\n\r\n    handleClick(e){\r\n        e.preventDefault()\r\n      };\r\n\r\n\r\n    render () {\r\n    return (\r\n\r\n    <div>\r\n      <NavBar />\r\n    {/* <div class=\"columns is-mobile\"> */}\r\n\r\n        <div>\r\n            <LazyHero imageSrc={ banner }>\r\n                <h1>Decentralized REIT</h1>\r\n            </LazyHero>\r\n\r\n            <div align=\"center\">\r\n            <Button style={{margin:10 }} variant=\"outlined\" align=\"center\" color=\"primary\" onClick={this.handleRegister}>Register as Investor</Button>\r\n\r\n            {/* <Button style={{margin:10 }} variant=\"outlined\" display=\"inline\" color=\"primary\" onClick={this.handleDeposit}>Deposit</Button>\r\n            <Input defaultValue=\" Amount (in Ethers)\" display=\"inline\" inputProps={{ 'aria-label': 'description' }} />\r\n            <br/>\r\n            <br/> */}\r\n\r\n            <Button style={{margin:10 }} variant=\"outlined\" color=\"primary\" onClick={this.handleClaim}>Claim Reward</Button>\r\n\r\n            <Button style={{margin:10 }} variant=\"outlined\" color=\"primary\" onClick={this.handleWithdraw}>Withdraw Investments</Button>\r\n            {/* <br/>\r\n            <br/> */}\r\n            </div>\r\n\r\n            <div align=\"center\">\r\n            <Typography style={{margin:10 }} variant=\"body1\" noWrap>Deployed on: Ropsten</Typography>\r\n            <Typography style={{margin:10 }} variant=\"body1\" noWrap>Contract Address: 0x7EC9bdA4c5badc9D3A2728E4952687007F4e6B91</Typography>\r\n\r\n            <Typography style={{margin:10 }} variant=\"body1\" noWrap>Transaction Hash: {this.state.txHash}</Typography>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}}\r\n    export default withStyles(useStyles)(Home);","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from './../Home'\r\n\r\n\r\nconst Router = () => (\r\n  <Switch>\r\n    <Route exact path='/dereit' component={Home}/>\r\n  </Switch>\r\n)\r\nexport default Router","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Site from './layout/Site'\r\nimport Content from './layout/Content'\r\nimport Footer from './layout/Footer'\r\nimport Router from './layout/Router'\r\n\r\nconst Layout = ({ children }) => (\r\n  <Site>\r\n    <Content>\r\n      <Router />\r\n    </Content>\r\n    <Footer />\r\n  </Site>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.func,\r\n}\r\n\r\nexport default Layout","import React, { Component } from 'react'\nimport Layout from './app/Layout'\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout />\n    );\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\nReactDOM.render((\n  <Router>\n    <App />\n  </Router>\n), document.getElementById('root'))\nserviceWorker.unregister();\n"],"sourceRoot":""}